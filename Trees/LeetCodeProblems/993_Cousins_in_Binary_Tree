class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        if(root==null){
            return false;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        while(!queue.isEmpty()){
            int sum = 0;
            int levelSize = queue.size();
            for(int i=0;i<levelSize;i++){
                TreeNode currentNode = queue.poll();
                if(currentNode.left!=null && currentNode.right!=null){
                    if(currentNode.left.val==x && currentNode.right.val==y
                    || currentNode.left.val==y && currentNode.right.val==x){
                    return false;
                    }
                }
                if(currentNode.val==x||currentNode.val==y){
                    sum++;
                }
                if(currentNode.left!=null){
                    queue.offer(currentNode.left);
                }
                if(currentNode.right!=null){
                    queue.offer(currentNode.right);
                }
            }
            if(sum==2){
                return true;
            }
        }
        return false;
    }
}
