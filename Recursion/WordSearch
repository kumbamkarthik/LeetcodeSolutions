class Solution {
    public boolean exist(char[][] board, String word) {
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(dfs(board,word,i,j,0)){
                    return true;
                }
            }
        }
        return false;
    }
    private static boolean dfs(char[][] board,String target,int r,int c,int s){
        if(r<0 || r==board.length || c<0 || c==board[0].length){
            return false;
        }
        if(board[r][c]!=target.charAt(s) || board[r][c]=='*'){
            return false;
        }
        if(s==target.length()-1){
            return true;
        }
        final char ch = board[r][c];
        board[r][c] = '*';
        boolean value = dfs(board,target,r-1,c,s+1) || dfs(board,target,r+1,c,s+1)
                        || dfs(board,target,r,c-1,s+1) || dfs(board,target,r,c+1,s+1);
        board[r][c] = ch;
        return value;
    }
}
