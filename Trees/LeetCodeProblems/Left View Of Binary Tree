class Tree
{
    //Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root)
    {
      // Your code here
      ArrayList<Integer> result = new ArrayList<Integer>();
      ArrayList<ArrayList<Integer>> DResult = new ArrayList<>();
      if(root==null){
          return result;
      }
      Queue<Node> queue = new LinkedList<>();
      queue.offer(root);
      while(!queue.isEmpty()){
          int levelSize = queue.size();
          ArrayList<Integer> currentLevel = new ArrayList<>(levelSize);
          for(int i=0;i<levelSize;i++){
              Node currentNode = queue.poll();
              currentLevel.add(currentNode.data);
              if(currentNode.left!=null){
                  queue.offer(currentNode.left);
              }
              if(currentNode.right!=null){
                  queue.offer(currentNode.right);
              }
          }
          DResult.add(currentLevel);
      }
      for(int i=0;i<DResult.size();i++){
          result.add(DResult.get(i).get(0));
      }
      return result;
    }
}
